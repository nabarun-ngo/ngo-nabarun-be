name: Create Release and Deploy
on:
  push:
    paths-ignore:
    - '.github/**'
    branches:
    - master

permissions:
      contents: write         

jobs:
  create_release:
    name: 'Create release'
    runs-on: ubuntu-latest
    outputs:
      tag_name: ${{ steps.tag_version.outputs.new_tag }} 
    steps:
      - uses: actions/checkout@v4
      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Create a GitHub release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.tag_version.outputs.new_tag }}
          name: Release ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}
  
  build-and-deploy-stage:
    name: 'Build Artifacts and Deploy to STAGE'
    runs-on: 'ubuntu-latest'
    environment: 'STAGE'
    needs: [create_release]
    steps:
      - name: Checkout repository | tag ${{ needs.create_release.outputs.tag_name }}
        uses: actions/checkout@v4
        with:
          ref: ${{ needs.create_release.outputs.tag_name }}

      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          java-version: '17' 
          distribution: 'adopt'

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            maven-   
        
      - name: Build with Maven
        run: |
          mvn clean package
          
      - name: Get JAR file path
        id: get-jar-path
        run: |
          ORIGINAL_JAR=$(find ngo-nabarun-app/target -name "*.jar" | grep -v "sources.jar" | grep -v "javadoc.jar")
          JAR_PATH="ngo-nabarun-app/target/app.jar"
          mv "${ORIGINAL_JAR}" "${JAR_PATH}"
          echo "JAR_PATH=${JAR_PATH}" >> $GITHUB_ENV
          echo "Renamed JAR file path: ${JAR_PATH}"

      - name: Setup Google Cloud CLI
        uses: google-github-actions/auth@v2
        with:
          project_id: ${{ vars.GCP_PROJECT_ID }}
          credentials_json: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true
        
      - name: Setup Application Variables
        uses: ikuanyshbekov/app-yaml-env-compiler@v1.0
        with:
          path: "app.yaml"
        env:
         ENVIRONMENT: ${{ vars.APP_ENV }} 
         DOPPLER_PROJECT_NAME: ${{ vars.DOPPLER_PROJECT_NAME }} 
         DOPPLER_SERVICE_TOKEN: ${{ secrets.DOPPLER_SERVICE_TOKEN }}  
         LOG_LEVEL: ${{ vars.LOG_LEVEL }}
         VERSION: ${{ needs.create_release.outputs.tag_name }}
         
      - name: Deploy to Google App Engine
        uses: google-github-actions/deploy-appengine@v2
        with:
          project_id: ${{ vars.GCP_PROJECT_ID }}
          credentials: ${{ secrets.GCP_SA_KEY }}
          promote: true
          deliverables: ${{ env.JAR_PATH }}
          flags: '--appyaml=app.yaml'
      
      - name: Encode Variable to Base64
        id: encode
        run: |
          ENCODED=$(echo '${{ secrets.GCP_SA_KEY }}' | base64)
          echo "Encoded Variable: $ENCODED"
          echo 'GCP_SA_KEY_ENCODED<<EOF' >> $GITHUB_ENV
          echo "$ENCODED" >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV
      
      - name: Delete GAE versions
        uses: vijayp23/delete-gae-version-action@1.0.0
        with:
          service-account: ${{ env.GCP_SA_KEY_ENCODED }}
          project-id: ${{ vars.GCP_PROJECT_ID }}
          service-name: 'default'
 
  build-and-deploy-prod:
    name: 'Build Artifacts and Deploy to PROD'
    runs-on: 'ubuntu-latest'
    environment: 'PROD'
    needs: [create_release,build-and-deploy-stage]
    steps:
      - name: Checkout repository | tag ${{ needs.create_release.outputs.tag_name }}
        uses: actions/checkout@v4
        with:
          ref: ${{ needs.create_release.outputs.tag_name }}

      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          java-version: '17' 
          distribution: 'adopt'

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            maven-   
        
      - name: Build with Maven
        run: |
          mvn clean package
          
      - name: Get JAR file path
        id: get-jar-path
        run: |
          ORIGINAL_JAR=$(find ngo-nabarun-app/target -name "*.jar" | grep -v "sources.jar" | grep -v "javadoc.jar")
          JAR_PATH="ngo-nabarun-app/target/app.jar"
          mv "${ORIGINAL_JAR}" "${JAR_PATH}"
          echo "JAR_PATH=${JAR_PATH}" >> $GITHUB_ENV
          echo "Renamed JAR file path: ${JAR_PATH}"

      - name: Setup Google Cloud CLI
        uses: google-github-actions/auth@v2
        with:
          project_id: ${{ vars.GCP_PROJECT_ID }}
          credentials_json: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true
        
      - name: Setup Application Variables
        uses: ikuanyshbekov/app-yaml-env-compiler@v1.0
        with:
          path: "app.yaml"
        env:
         ENVIRONMENT: ${{ vars.APP_ENV }} 
         DOPPLER_PROJECT_NAME: ${{ vars.DOPPLER_PROJECT_NAME }} 
         DOPPLER_SERVICE_TOKEN: ${{ secrets.DOPPLER_SERVICE_TOKEN }}  
         LOG_LEVEL: ${{ vars.LOG_LEVEL }}
         VERSION: ${{ needs.create_release.outputs.tag_name }}
         
      - name: Deploy to Google App Engine
        uses: google-github-actions/deploy-appengine@v2
        with:
          project_id: ${{ vars.GCP_PROJECT_ID }}
          credentials: ${{ secrets.GCP_SA_KEY }}
          promote: true
          deliverables: ${{ env.JAR_PATH }}
          flags: '--appyaml=app.yaml'

      - name: Encode Variable to Base64
        id: encode
        run: |
          ENCODED=$(echo '${{ secrets.GCP_SA_KEY }}' | base64)
          echo "Encoded Variable: $ENCODED"
          echo 'GCP_SA_KEY_ENCODED<<EOF' >> $GITHUB_ENV
          echo "$ENCODED" >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV
      
      - name: Delete GAE versions
        uses: vijayp23/delete-gae-version-action@1.0.0
        with:
          service-account: ${{ env.GCP_SA_KEY_ENCODED }}
          project-id: ${{ vars.GCP_PROJECT_ID }}
          service-name: 'default'








  
